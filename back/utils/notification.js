require('dotenv').config();
const nodemailer = require('nodemailer');
const Ordering = require('../models/customer/Ordering');
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS
  }
});

/**
 * ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡πÑ‡∏£‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß
 * @param {string} email - ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
 * @param {string} nickname - ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
 * @param {string} product - ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
 * @param {string} store_name - ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
 */
async function sendOrderReceivedEmail(email, nickname, product, store_name) {
  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: email,
    subject: "‡∏°‡∏µ‡πÑ‡∏£‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß!",
    html: `
      <h3>üì¶ ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${nickname || "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤"}</h3>
      <p>‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏≤‡∏Å‡∏£‡πâ‡∏≤‡∏ô <b>${store_name}</b> ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: <b>${product}</b></p>
      <p>‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÑ‡∏£‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß ‚úÖ</p>
      <p>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: <b>Rider Received</b></p>
      <hr />
      <p style="font-size: 12px; color: gray;">‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏≤ ‚ù§Ô∏è</p>
    `
  };

  try {
    await transporter.sendMail(mailOptions);
    console.log(`üìß Email sent to: ${email}`);
    return { success: true };
  } catch (error) {
    console.error("‚ùå Failed to send email:", error);
    return { success: false, error };
  }
}
async function sendPaymentReceivedEmail(serviceEmail, customerName, product, storeName) {
  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: serviceEmail,
    subject: `‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ${customerName} ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß!`,
    html: `
      <h3>üì¶ ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß</h3>
      <p>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì <b>${customerName}</b> ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏à‡∏≤‡∏Å‡∏£‡πâ‡∏≤‡∏ô <b>${storeName}</b></p>
      <p>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: <b>${product}</b></p>
      <p>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå: <b>Ordering</b></p>
      <hr />
      <p style="font-size: 12px; color: gray;">‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏™‡πà‡∏á</p>
    `
  };

  return transporter.sendMail(mailOptions);
}

module.exports = { sendOrderReceivedEmail };